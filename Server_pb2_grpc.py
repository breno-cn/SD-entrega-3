# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Server_pb2 as Server__pb2


class ServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create = channel.unary_unary(
                '/Server/create',
                request_serializer=Server__pb2.Request.SerializeToString,
                response_deserializer=Server__pb2.Response.FromString,
                )
        self.read = channel.unary_unary(
                '/Server/read',
                request_serializer=Server__pb2.Request.SerializeToString,
                response_deserializer=Server__pb2.Response.FromString,
                )
        self.update = channel.unary_unary(
                '/Server/update',
                request_serializer=Server__pb2.Request.SerializeToString,
                response_deserializer=Server__pb2.Response.FromString,
                )
        self.delete = channel.unary_unary(
                '/Server/delete',
                request_serializer=Server__pb2.Request.SerializeToString,
                response_deserializer=Server__pb2.Response.FromString,
                )
        self.ping = channel.unary_unary(
                '/Server/ping',
                request_serializer=Server__pb2.Request.SerializeToString,
                response_deserializer=Server__pb2.PingResponse.FromString,
                )
        self.replicateCreate = channel.unary_unary(
                '/Server/replicateCreate',
                request_serializer=Server__pb2.Request.SerializeToString,
                response_deserializer=Server__pb2.Void.FromString,
                )
        self.replicateRead = channel.unary_unary(
                '/Server/replicateRead',
                request_serializer=Server__pb2.Request.SerializeToString,
                response_deserializer=Server__pb2.Void.FromString,
                )
        self.replicateUpdate = channel.unary_unary(
                '/Server/replicateUpdate',
                request_serializer=Server__pb2.Request.SerializeToString,
                response_deserializer=Server__pb2.Void.FromString,
                )
        self.replicateDelete = channel.unary_unary(
                '/Server/replicateDelete',
                request_serializer=Server__pb2.Request.SerializeToString,
                response_deserializer=Server__pb2.Void.FromString,
                )


class ServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def replicateCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def replicateRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def replicateUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def replicateDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=Server__pb2.Request.FromString,
                    response_serializer=Server__pb2.Response.SerializeToString,
            ),
            'read': grpc.unary_unary_rpc_method_handler(
                    servicer.read,
                    request_deserializer=Server__pb2.Request.FromString,
                    response_serializer=Server__pb2.Response.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=Server__pb2.Request.FromString,
                    response_serializer=Server__pb2.Response.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=Server__pb2.Request.FromString,
                    response_serializer=Server__pb2.Response.SerializeToString,
            ),
            'ping': grpc.unary_unary_rpc_method_handler(
                    servicer.ping,
                    request_deserializer=Server__pb2.Request.FromString,
                    response_serializer=Server__pb2.PingResponse.SerializeToString,
            ),
            'replicateCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.replicateCreate,
                    request_deserializer=Server__pb2.Request.FromString,
                    response_serializer=Server__pb2.Void.SerializeToString,
            ),
            'replicateRead': grpc.unary_unary_rpc_method_handler(
                    servicer.replicateRead,
                    request_deserializer=Server__pb2.Request.FromString,
                    response_serializer=Server__pb2.Void.SerializeToString,
            ),
            'replicateUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.replicateUpdate,
                    request_deserializer=Server__pb2.Request.FromString,
                    response_serializer=Server__pb2.Void.SerializeToString,
            ),
            'replicateDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.replicateDelete,
                    request_deserializer=Server__pb2.Request.FromString,
                    response_serializer=Server__pb2.Void.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Server', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Server(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/create',
            Server__pb2.Request.SerializeToString,
            Server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/read',
            Server__pb2.Request.SerializeToString,
            Server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/update',
            Server__pb2.Request.SerializeToString,
            Server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/delete',
            Server__pb2.Request.SerializeToString,
            Server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/ping',
            Server__pb2.Request.SerializeToString,
            Server__pb2.PingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def replicateCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/replicateCreate',
            Server__pb2.Request.SerializeToString,
            Server__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def replicateRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/replicateRead',
            Server__pb2.Request.SerializeToString,
            Server__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def replicateUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/replicateUpdate',
            Server__pb2.Request.SerializeToString,
            Server__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def replicateDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/replicateDelete',
            Server__pb2.Request.SerializeToString,
            Server__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
